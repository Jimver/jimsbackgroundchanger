# Version format.
version: '{build}-ci'

environment:
   CoverityProjectToken:
    secure: e7r+gPTjXvtlH9X8z9Uoa/c94r+3AnitV/JTGZbdymnX0YSM5xS6yApdZRAc0wyZ0uNssSHuJ9mKNob9msREvdz9Et4W5lrZNKSs/6V1++mD1QYmsfPrGWafdHy2u7uEcgXDKhzf7R+s58d9G38F1jJ8H+njacFBksS1DiEeh1FqSBa4k9td7uoLSEn3sVFgbYLvsPmSZDo6DbBD2tw19kZqoXrPiNG6zFI6JUAlzwJHHf/VE4afGMNSZPy783dMjaHqakYOcCkwBZhPGUCy8HcWZsgJJ8LYtTCLTtz2yliB1Qr7qcwJw5lyky97Uk/7ZNb4V9soT5c61T2oF8fv0i8IIvxGcxTvAIAt9s3rDcKeLkv99RhpkZ2ZNr4fJiVLHGTgJ6FIA68/4FaP0evGYxs4zfgKZ3sMWbxcQZ8iuM8k+hk/feDnscCQ1l8MpH1n/vMy6paHfRpM9sUuMBckJLmtvl36MwxF7Ig4Ge5BP/qYT1h6GPe5A/rO0ighRxwTR/mjJR3qAxWy9u+clW3a6nLy8sS9iOGIhC2xqp/Cztn6QdLXVmoG1IWH4T+L/sIjReRBmFB0vUxEdhBPJcCOIWoJ65xL5JOgbf7iXPk8/9Rp9lZgUZ2TnlOrafpApLPC6ue4aH1RmrX82cGOK/KmAvk1xBnhHm9HZqehXzmNg5c=

init:
# Properties, passed to MSBuild project.
- ps: |
    $env:BuildDir = "$env:APPVEYOR_BUILD_FOLDER\.OUTPUT"
    $env:VersionBuild = "$env:APPVEYOR_BUILD_NUMBER"
    $env:VersionStage = "$env:APPVEYOR_REPO_BRANCH"
    $env:VersionTag = "$env:APPVEYOR_REPO_COMMIT"

image: Visual Studio 2017

platform:
- x86
- x64

configuration:
- Release

build_script:
- ps: |
    nuget restore
    $buildCmd = "msbuild.exe"
    $buildArgs = @(
      "/m",
      "/l:C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll",
      "/p:Configuration=$env:CONFIGURATION",
      "/p:Platform=$env:PLATFORM")
    # If build is not a scheduled one, then simply build the project with
    # MSBuild.
    #if ($env:APPVEYOR_SCHEDULED_BUILD -ne "True") {
    if ($env:APPVEYOR_REPO_BRANCH -ne "coverity_scan") {
      & $buildCmd $buildArgs
      return
    }

    # Else, build project with Coverity Scan.
    "Building project with Coverity..."
    & cov-build.exe --dir cov-int $buildCmd $buildArgs
    # Compress results.
    $coverityPublisher =
      ".\packages\PublishCoverity.0.11.0\tools\PublishCoverity.exe"
    "Compressing Coverity results..."
    & "$coverityPublisher" compress `
      -i "$env:APPVEYOR_BUILD_FOLDER\cov-int" `
      -o "$env:APPVEYOR_BUILD_FOLDER\$env:APPVEYOR_PROJECT_NAME.zip" `
      --overwrite

    # Upload results to Coverity server.
    $version = "$env:VersionMajor.$env:VersionMinor.$env:VersionPatch" +
      "-$env:VersionStage+$env:VersionBuild"
    "Uploading Coverity results..."
    & "$coverityPublisher" publish `
      --nologo `
      -t "$env:CoverityProjectToken" `
      -e "$env:CoverityNotificationEmail" `
      -r "$env:APPVEYOR_REPO_NAME" `
      -z "$env:APPVEYOR_BUILD_FOLDER\$env:APPVEYOR_PROJECT_NAME.zip" `
      -d "CI server branch build." `
      --codeVersion "$version"

test_script:
- .\packages\OpenCover.4.6.519\tools\OpenCover.Console.exe -register:user -target:".\packages\NUnit.ConsoleRunner.3.6.1\tools\nunit3-console.exe" -targetargs:".\JimsBackgroundChanger.Tests\bin\Release\JimsBackgroundChanger.Tests.dll" -output:".\coverage.xml"
- .\packages\Codecov.1.0.1\tools\codecov.exe -f "coverage.xml" -t 4b4666f3-dbf9-4798-988e-6533df907d44